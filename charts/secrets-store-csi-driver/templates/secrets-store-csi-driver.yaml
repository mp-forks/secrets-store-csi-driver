{{- if .Values.linux.enabled}}
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: {{ template "sscd.fullname" . }}
  namespace: {{ .Release.Namespace }}
{{ include "sscd.labels" . | indent 2 }}
spec:
  selector:
    matchLabels:
      app: {{ template "sscd.name" . }}
  template:
    metadata:
{{ include "sscd.labels" . | indent 6 }}
    spec:
      serviceAccountName: secrets-store-csi-driver
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: node-driver-registrar
          image: {{ index .Values "linux" "node-driver-registrar" "image" "repository" }}:{{ index .Values "linux" "node-driver-registrar" "image" "tag" }}
          args:
            - --v=5
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path={{ .Values.linux.kubeletRootDir }}/plugins/csi-secrets-store/csi.sock
          lifecycle:
            preStop:
              exec:
                command:
                  [
                    "/bin/sh",
                    "-c",
                    "rm -rf /registration/secrets-store.csi.k8s.io-reg.sock",
                  ]
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          imagePullPolicy: {{ index .Values "linux" "node-driver-registrar" "image" "pullPolicy" }}
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
        - name: secrets-store
          image: "{{ .Values.linux.image.repository }}:{{ .Values.linux.image.tag }}"
          args:
            - "--debug={{ .Values.logLevel.debug }}"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(KUBE_NODE_NAME)"
            - "--provider-volume=/etc/kubernetes/secrets-store-csi-providers"
            {{- if and (semverCompare ">= v0.0.8-0" .Values.linux.image.tag) .Values.minimumProviderVersions }}
            - "--min-provider-version={{ .Values.minimumProviderVersions }}"
            {{- end }}
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          imagePullPolicy: {{ .Values.linux.image.pullPolicy }}
          securityContext:
            privileged: true
          {{- if semverCompare ">= v0.0.8-0" .Values.linux.image.tag }}
          ports:
            - containerPort: {{ .Values.livenessProbe.port }}
              name: healthz
              protocol: TCP
          livenessProbe:
              failureThreshold: 5
              httpGet:
                path: /healthz
                port: healthz
              initialDelaySeconds: 30
              timeoutSeconds: 10
              periodSeconds: 15
          {{- end }}
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: mountpoint-dir
              mountPath: {{ .Values.linux.kubeletRootDir }}/pods
              mountPropagation: Bidirectional
            - name: providers-dir
              mountPath: /etc/kubernetes/secrets-store-csi-providers
        {{- if semverCompare ">= v0.0.8-0" .Values.linux.image.tag }}
        - name: liveness-probe
          image: {{ index .Values "linux" "liveness-probe" "image" "repository" }}:{{ index .Values "linux" "liveness-probe" "image" "tag" }}
          imagePullPolicy: {{ index .Values "linux" "liveness-probe" "image" "pullPolicy" }}
          args:
          - --csi-address=/csi/csi.sock
          - --probe-timeout=3s
          - --health-port={{ .Values.livenessProbe.port }}
          - -v={{ .Values.livenessProbe.logLevel }}
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
        {{- end }}
      volumes:
        - name: mountpoint-dir
          hostPath:
            path: {{ .Values.linux.kubeletRootDir }}/pods
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: {{ .Values.linux.kubeletRootDir }}/plugins_registry/
            type: Directory
        - name: plugin-dir
          hostPath:
            path: {{ .Values.linux.kubeletRootDir }}/plugins/csi-secrets-store/
            type: DirectoryOrCreate
        - name: providers-dir
          hostPath:
            path: /etc/kubernetes/secrets-store-csi-providers
            type: DirectoryOrCreate
      nodeSelector:
        kubernetes.io/os: linux
{{- if .Values.linux.nodeSelector }}
{{- toYaml .Values.linux.nodeSelector | nindent 8 }}
{{- end }}
{{- end -}}
